{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6MAoCeA,EAjCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAkBrC,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAETC,EAFS,iDAEuCC,UAAUH,GAFjD,+DAGII,MAAOF,GAHX,cAGTG,EAHS,gBAIMA,EAAKC,OAJX,uBAIRC,EAJQ,EAIRA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAV3B,kBAaRM,GAbQ,4CAAH,sDCCPO,EAAe,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEjC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDd,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAmBxC,OAbAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GAECH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAI1B,CAACpB,IAGGqB,EDdyBK,CAAc1B,GAAjCa,EAJyB,EAI/BN,KAAca,EAJiB,EAIjBA,QAOrB,OACI,oCACA,wBAAIJ,UAAU,qCAAqChB,GACjDoB,GAAW,uBAAGJ,UAAU,oCAAb,WACT,yBAAKA,UAAU,aAEPH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IAELD,UEKlBkB,EA1BO,WAAM,IAAD,EAEa1C,mBAAS,CAAC,kBAFvB,mBAEhB2C,EAFgB,KAEJ5C,EAFI,KAQvB,OACI,oCACI,6CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OACnB,kBAAC,EAAD,CACI2B,IAAM3B,EACNA,SAAWA,UCnBvC8B,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.043d69ed.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('')\n    \n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if (inputValue.trim().length > 2) {\n            setCategories( cats => [inputValue, ...cats] )            \n            setInputValue('');\n        }\n        \n    }\n\n    return (        \n        <form onSubmit={handleSubmit}>\n            <input \n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>                    \n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n\nexport default AddCategory\n","    \nexport const getGifs = async (category) =>{\n        \n        const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=wmbzwBmuhhNHG5xD8WxQvazge7P3D6Wp`\n        const resp = await fetch( url )\n        const {data} = await resp.json();\n\n        const gifs = data.map( img => {\n            return {\n                id: img.id,\n                title: img.title,\n                url: img.images?.downsized_medium.url\n            }\n        })        \n        return gifs;\n    }","import React from 'react'\n\nexport const GiftGridItem = ({title, url}) => {    \n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={url} alt={title}/>\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GiftGridItem } from './GiftGridItem'\n// import { getGifs } from '../helpers/getGifs'\n\nexport const GiftGrid = ( {category} ) => {    \n\n    // const [images, setImages] = useState([])\n\n    const {data: images, loading} = useFetchGifs( category );\n\n    // useEffect( () => {\n    //     getGifs( category )\n    //         .then( setImages )\n    // }, [ category ])\n\n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3> \n        { loading && <p className=\"animate__animated animate__flash\">Loading</p>}           \n            <div className=\"card-grid\">                   \n                {                    \n                    images.map( img => (\n                        <GiftGridItem \n                            key={ img.id }    \n                            // img={ img }\n                            { ...img }\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from \"react\"\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () => {\n        getGifs( category )\n            .then( imgs => {\n                \n                    setState({\n                        data: imgs,\n                        loading: false\n                    })\n\n            })\n    }, [category])\n\n\n    return state;\n}\n","import React, {useState} from 'react'\nimport AddCategory from './components/AddCategory'\nimport { GiftGrid } from './components/GiftGrid'\n\n\nconst GiftExpertApp = () =>{    \n    \n    const [categories, setCategories] = useState(['One Punch Man'])\n\n    // const handleAdd = () => {\n    //     setCategories( [...categories, 'Hunter X Hunter'] )\n    // }\n\n    return (\n        <>\n            <h2>GiftExpertApp</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr/>\n\n            <ol>\n                {\n                    categories.map(category => (\n                        <GiftGrid \n                            key={ category }\n                            category={ category }/>\n                    ))\n                }\n            </ol>\n        </>\n    )\n}\nexport default GiftExpertApp","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GiftExpertApp from './GiftExpertApp'\n\nReactDOM.render(  \n  <GiftExpertApp />,  \n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}